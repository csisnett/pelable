<div id="everything">
<h1><%= @chatroom.name %> </h1>
<%= if description?(@chatroom.description) do %>
<%= @chatroom.description %>
<% end %>

<%= tag :meta, name: "channel_token",
               content: Phoenix.Token.sign(@conn, "BndIeIG1Y5aZGD534Z0WFpwG+oBWlOkeD/C1lIGvR+mSKF0rNpRWYodPr+0YM2yr", @current_user.id) %>

<div id="chat-interface">

<br><br>
<div class="vertical-menu">
<a> <b> Public Channels </b> </a>
<div id="chatroom-container">
<%= for chatroom <- @public_chatrooms do %>
<%= if seen_last_message?(@user, chatroom) do %>
<%= content_tag(:a, chatroom.name, chatroom_uuid: chatroom.uuid, href: Routes.chatroom_path(@conn, :show, chatroom.uuid)) %>
 <% else %>
 <b>
 <%= content_tag(:a, chatroom.name, chatroom_uuid: chatroom.uuid, href: Routes.chatroom_path(@conn, :show, chatroom.uuid)) %>
 </b>
 <% end %>
 <% end %>
 </div> 
<a> <b> Private Channels</b> </a>
<%= if @user.joined_chats != [] do %>
<%= for chatroom <- @private_groups do %>
<%= if seen_last_message?(@user, chatroom) do %>
<%= content_tag(:a, chatroom.name, chatroom_uuid: chatroom.uuid, href: Routes.chatroom_path(@conn, :show, chatroom.uuid)) %>
 <% else %>
 <b>
 <%= content_tag(:a, chatroom.name, chatroom_uuid: chatroom.uuid, href: Routes.chatroom_path(@conn, :show, chatroom.uuid)) %>
 </b>
 <% end %>

 <% end %>

 <%= for chatroom <- @private_conversations do %>
<%= if seen_last_message?(@user, chatroom) do %>
<%= render_private_conversation(@user, chatroom, Routes.chatroom_path(@conn, :show, chatroom.uuid)) %>
 <% else %>
 <b>
 <%= content_tag(:a, chatroom.name, chatroom_uuid: chatroom.uuid, href: Routes.chatroom_path(@conn, :show, chatroom.uuid)) %>
 </b>
 <% end %>

 <% end %>

 <% end %>

 <%= if @user.chat_invitations != [] do %>
 <a> <b> Invitations </b> </a>
<%= for chatroom <- @user.chat_invitations do %>
<%= link chatroom.name, to: Routes.chatroom_path(@conn, :show, chatroom.uuid) %>
 <% end %>
 <% end %>

</div>


<div id="chat-box">
<%= for message <- @messages do %>
   <%= render_message message %>
<% end %>
</div>

<div id="user-list">
<a> <b>Online </b> </a>
<div id="user-container">
</div>
<%= if @chatroom.type != "public" do %>
<a> <b> Participants </b> </a>
<%= for participant <- @chatroom.participants do %>
<a> <%=  participant.username  %></a>
<% end %>
<% end %>


</div>

</div>
<a id="new_message" style="inline-block" href="#" onclick="return false;"></a> <br>
<p id="typing" style="inline-block"> </p>

<form id="chat-form">
<textarea id="body" placeholder="Your message" rows="2" cols="60"> </textarea>
<input type="submit" id="submit_button" value="Send">
</form>
</div>


<script src="<%= Routes.static_path(@conn, "/js/linkify.min.js") %>" ></script>
<script src="<%= Routes.static_path(@conn, "/js/linkify-html.js") %>" ></script>

<script src="<%= Routes.static_path(@conn, "/js/dochat.js") %>"> </script>

<script type="module" src="<%= Routes.static_path(@conn, "/js/chatroom.js") %>"></script> 


<script>

function render_online_user(user){
  let user_container = document.getElementById("user-container")
  let a = document.createElement("a")
  let username = document.createTextNode(user.metas[0].username)
  a.appendChild(username)
  user_container.appendChild(a)
}

function render_online_users(list_users){
  let user_container = document.getElementById("user-container")
  while (user_container.firstChild) {
    user_container.removeChild(user_container.firstChild);
  }
  list_users.forEach(render_online_user)
}

function render_user_typing(users_string){
  //console.log(user)
  
  
let typing_container = document.getElementById("typing");
// console.log(user)
typing_container.innerText = users_string + "...";
  
  
}

 function render_users_typing(user_list){
   let typing_container = document.getElementById("typing");
   /*while (typing_container.firstChild) {
    typing_container.removeChild(typing_container.firstChild);
  }*/

  var typing_users = user_list.filter((user) => {
    if(user.metas[0].typing){
      return user
    }
  });

  //console.log(typing_users.length);
  
  if (typing_users.length == 0) {
    typing_container.setAttribute("style", "visibility: hidden;")
  } else{
    typing_container.setAttribute("style", "display: inline-block")
    var users_string = typing_users.reduce((accumulator, user) => {
    return accumulator + " " + user.metas[0].username
  }, " ");
    render_user_typing(users_string)

    
  }

  //user_list.forEach( (user) => {render_user_typing(user)})
 };
let chatBox = document.querySelector('#chat-box')
chatBox.scrollTop = chatBox.scrollHeight;

 </script>