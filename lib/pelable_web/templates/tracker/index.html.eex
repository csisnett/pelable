<%= csrf_meta_tag() %>
<div id="app_basic" class="container">

<div>
<h1 style="display: inline-block">Day Tracker ðŸ§©</h1> <b-button v-if="started" v-on:click="stop_tracker" style="display: inline-block" variant="outline-danger">stop the day</b-button>
</div>
<br>
<h4 v-if="!started">To start tracking enter your first activity </h4>

<div v-if="started">

<div class="mt-3">
    <b-card border-variant="primary" header-bg-variant="primary" header-text-variant="white" :header="current_activity_name" class="text-center" style="width: 13rem;">
    <b-card-text> {{show_hour}} {{show_minutes}} {{show_seconds}}</b-card-text>
    </b-card>
</div>
<br>

</div>
<br>
<div v-if="started">
<h4> Start a new activity </h4>
</div>
  <b-form inline>
    <label class="sr-only" for="inline-form-input-name">Name of activity</label>
    <b-form-input
      id="inline-form-input-name"
      class="mb-2 mr-sm-2 mb-sm-0"
      placeholder="Time to.."
      v-model="activity_name"
    ></b-form-input>

    <b-button v-on:click="create_new_activity" variant="primary">Start</b-button>
  </b-form>
<br>
<h4 v-if="terminated"> Today's activities </h4>
<br>
<activity
v-for="activity in activities"
v-bind:name="activity.name"
v-bind:start_date="activity.started_at_local"
v-bind:end_date="activity.terminated_at_local"
>
</activity>
</div> <!-- app -->

<script>

var app = new Vue(
  {
    el: '#app_basic',
    data: function(){
      return {
        started: false,
        activities: [],
        current_activity: false,
        minutes: 0,
        seconds: 0,
        hours: 0,
        timer: 0,
        activity_name: "",
        activity_started: "",
        current_activity_name: "activity",
        tracker_uuid: "",
        reset_timer: false,
        terminated: false
      }
    },
    created: function(){
      
    },
    methods: {
      create_new_activity: function(){
        if(this.started === false){
        start_tracker(this.activity_name)
        } else {
          add_new_activity(this.activity_name, this.tracker_uuid)
        }
      },
      stop_tracker: function(){
        terminate_tracker(this.tracker_uuid);
      },
      run_timer: function(){
        if(this.reset_timer === true){
          this.seconds = 0;
          this.minutes = 0;
          this.hours = 0;
          this.timer = 0;
          this.reset_timer = false;
        }
        if(this.started === false){
          return 0;
        }
        
        if(this.seconds == 59){
        
        if(this.minutes == 59){
          this.hours = this.hours + 1
          this.minutes = 0
      
        } else{
          this.minutes = this.minutes + 1
        }

        this.seconds = 0
        }
        else{
          this.seconds = this.seconds + 1
          this.timer = this.timer + 1
        }
        window.setTimeout(this.run_timer, 1000)
      }
    },
    computed: {
      show_hour: function(){
        if(this.hours > 0){
          return this.hours.toString() + "h"
        } else{
          return ""
        }
      },
      show_minutes: function(){
        if(this.minutes > 0){
          return this.minutes.toString() + "min"
        } else{
          return ""
        }
      },
      show_seconds: function(){
        if(this.seconds > 0){
          return this.seconds.toString() + "s"
        }
      }
    }
  }
)

Vue.component('activity', {
  props: ['name', 'start_date', 'end_date'],
  template: '<div class="mt-3"> <b-card border-variant="primary" header-bg-variant="primary" header-text-variant="white" :header="name" class="text-center" style="width: 13rem;"> <b-card-text> {{duration()}} minutes </b-card-text> </b-card></div>',
  methods: {
    duration: function(){
      let second_date = new Date(this.end_date)
      let first_date = new Date(this.start_date)
      let ms = second_date.getTime() - first_date.getTime()
      let minutes = ms/(1000 * 60);
      return minutes
    }
  }
})

Vue.component('blog-post', {
  props: ['title'],
  template: '<h3>{{ title }}</h3>'
})

Vue.component('button-counter', {
  data: function () {
    return {
      count: 0
    }
  },
  template: '<button v-on:click="count++">You clicked me {{ count }} times.</button>'
})

function terminate_tracker(tracker_uuid){
      let csrf_token = document.querySelector('meta[name="csrf-token"]').content;
      let data = {}
      data._csrf_token = csrf_token;
      let url = "/terminate-tracker/" + tracker_uuid
      let json = JSON.stringify(data);
      let xhr = new XMLHttpRequest();
      xhr.open("PUT", url, true);
      xhr.setRequestHeader('Content-type','application/json; charset=utf-8');
      xhr.onload = function () {
	    let response = JSON.parse(xhr.responseText);
        console.log(response)
      if (xhr.status == "200") {
        console.log("The tracker has been stopped!")
        app.started = false
        app.activities = response.activities
        app.terminated = true

      } else {
        console.log("New activity wasn't recorded :(")
        }
      }
      xhr.send(json);
}

function add_new_activity(activity_name, tracker_uuid){
      let csrf_token = document.querySelector('meta[name="csrf-token"]').content;
      data = {activity_name: activity_name}
      data._csrf_token = csrf_token;
      let url = "/tracker/create_activity/" + tracker_uuid
      let json = JSON.stringify(data);
      let xhr = new XMLHttpRequest();
      xhr.open("POST", url, true);
      xhr.setRequestHeader('Content-type','application/json; charset=utf-8');
      xhr.onload = function () {
	    let response = JSON.parse(xhr.responseText);
        console.log(response)
      if (xhr.status == "200") {
        console.log("New activity started!")
        app.reset_timer = true
        app.current_activity_name = app.activity_name
        app.activity_name = ""

      } else {
        console.log("New activity wasn't recorded :(")
        }
      }
      xhr.send(json);
}

function start_tracker(activity_name){
      let csrf_token = document.querySelector('meta[name="csrf-token"]').content;
      
      let d = new Date();
      let day = d.toLocaleString(window.navigator.language, {weekday: 'long'});

      let data = {tracker: {activity_name: activity_name, tracker_name: day}}
      data._csrf_token = csrf_token;
      let json = JSON.stringify(data);
      let xhr = new XMLHttpRequest();
      xhr.open("POST", "/tracker", true);
      xhr.setRequestHeader('Content-type','application/json; charset=utf-8');
      xhr.onload = function () {
	    let response = JSON.parse(xhr.responseText);
        console.log(response)

      if (xhr.status == "200") {
        console.log("Tracking started!")
        app.started = true
        app.run_timer()
        app.current_activity_name = app.activity_name
        app.activity_name = ""
        app.tracker_uuid = response.created_tracker.uuid

      } else {
        console.log("Tracker didn't start :(")
        }
      }
      xhr.send(json);
}
</script>
